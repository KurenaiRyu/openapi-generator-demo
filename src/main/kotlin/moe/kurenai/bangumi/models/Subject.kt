/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package moe.kurenai.bangumi.models

import moe.kurenai.bangumi.models.Collection
import moe.kurenai.bangumi.models.Images
import moe.kurenai.bangumi.models.Item
import moe.kurenai.bangumi.models.Rating
import moe.kurenai.bangumi.models.SubjectType
import moe.kurenai.bangumi.models.Tag

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param id 
 * @param type 
 * @param name 
 * @param nameCn 
 * @param summary 
 * @param series 是否为书籍系列的主条目
 * @param nsfw 
 * @param locked 
 * @param platform TV, Web, 欧美剧, DLC...
 * @param images 
 * @param volumes 书籍条目的册数，由旧服务端从wiki中解析
 * @param eps 由旧服务端从wiki中解析，对于书籍条目为`话数`
 * @param totalEpisodes 数据库中的章节数量
 * @param rating 
 * @param collection 
 * @param tags 
 * @param date air date in `YYYY-MM-DD` format
 * @param infobox 
 */
@Serializable

data class Subject (

    @SerialName(value = "id")
    val id: kotlin.Int,

    @Contextual @SerialName(value = "type")
    val type: SubjectType,

    @SerialName(value = "name")
    val name: kotlin.String,

    @SerialName(value = "name_cn")
    val nameCn: kotlin.String,

    @SerialName(value = "summary")
    val summary: kotlin.String,

    /* 是否为书籍系列的主条目 */
    @SerialName(value = "series")
    val series: kotlin.Boolean,

    @SerialName(value = "nsfw")
    val nsfw: kotlin.Boolean,

    @SerialName(value = "locked")
    val locked: kotlin.Boolean,

    /* TV, Web, 欧美剧, DLC... */
    @SerialName(value = "platform")
    val platform: kotlin.String,

    @SerialName(value = "images")
    val images: Images,

    /* 书籍条目的册数，由旧服务端从wiki中解析 */
    @SerialName(value = "volumes")
    val volumes: kotlin.Int,

    /* 由旧服务端从wiki中解析，对于书籍条目为`话数` */
    @SerialName(value = "eps")
    val eps: kotlin.Int,

    /* 数据库中的章节数量 */
    @SerialName(value = "total_episodes")
    val totalEpisodes: kotlin.Int,

    @SerialName(value = "rating")
    val rating: Rating,

    @SerialName(value = "collection")
    val collection: Collection,

    @SerialName(value = "tags")
    val tags: kotlin.collections.List<Tag>,

    /* air date in `YYYY-MM-DD` format */
    @SerialName(value = "date")
    val date: kotlin.String? = null,

    @SerialName(value = "infobox")
    val infobox: kotlin.collections.List<Item>? = null

) {


}

