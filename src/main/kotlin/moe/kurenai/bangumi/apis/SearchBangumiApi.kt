/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package moe.kurenai.bangumi.apis

import moe.kurenai.bangumi.models.LegacySubjectType
import moe.kurenai.bangumi.models.SearchSubjectByKeywords200Response

import moe.kurenai.bangumi.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder

    open class SearchBangumiApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
    ) {

        /**
        * 条目搜索
        * 
         * @param keywords 关键词 &lt;br&gt; 需要 URL Encode 
         * @param type 条目类型，参考 [SubjectType](#model-Legacy_SubjectType) (optional)
         * @param responseGroup 返回数据大小 &lt;br&gt; 默认为 small (optional, default to small)
         * @param start 开始条数 (optional)
         * @param maxResults 每页条数 &lt;br&gt; 最多 25 (optional)
         * @return SearchSubjectByKeywords200Response
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun searchSubjectByKeywords(keywords: kotlin.String, type: LegacySubjectType?, responseGroup: kotlin.String?, start: kotlin.Int?, maxResults: kotlin.Int?): HttpResponse<SearchSubjectByKeywords200Response> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            type?.apply { localVariableQuery["type"] = listOf("$type") }
            responseGroup?.apply { localVariableQuery["responseGroup"] = listOf("$responseGroup") }
            start?.apply { localVariableQuery["start"] = listOf("$start") }
            maxResults?.apply { localVariableQuery["max_results"] = listOf("$maxResults") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/search/subject/{keywords}".replace("{" + "keywords" + "}", "$keywords"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }
